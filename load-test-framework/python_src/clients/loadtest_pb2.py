# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: loadtest.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='loadtest.proto',
  package='google.pubsub.loadtest',
  syntax='proto3',
  serialized_pb=_b('\n\x0eloadtest.proto\x12\x16google.pubsub.loadtest\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa8\x04\n\x0cStartRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\x14\n\x0crequest_rate\x18\x03 \x01(\x05\x12\x14\n\x0cmessage_size\x18\x04 \x01(\x05\x12 \n\x18max_outstanding_requests\x18\x05 \x01(\x05\x12.\n\nstart_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x33\n\x10\x62urn_in_duration\x18\x0c \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x1a\n\x12publish_batch_size\x18\x0b \x01(\x05\x12\x39\n\x16publish_batch_duration\x18\r \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x32\n\rtest_duration\x18\x07 \x01(\x0b\x32\x19.google.protobuf.DurationH\x00\x12\x1c\n\x12number_of_messages\x18\x08 \x01(\x05H\x00\x12?\n\x0epubsub_options\x18\t \x01(\x0b\x32%.google.pubsub.loadtest.PubsubOptionsH\x01\x12=\n\rkafka_options\x18\n \x01(\x0b\x32$.google.pubsub.loadtest.KafkaOptionsH\x01\x42\x11\n\x0fstop_conditionsB\t\n\x07options\"\x0f\n\rStartResponse\"D\n\rPubsubOptions\x12\x14\n\x0csubscription\x18\x01 \x01(\t\x12\x1d\n\x15max_messages_per_pull\x18\x02 \x01(\x05\"\x9e\x01\n\x0cKafkaOptions\x12\x0e\n\x06\x62roker\x18\x01 \x01(\t\x12\x30\n\rpoll_duration\x18\x02 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x1c\n\x14zookeeper_ip_address\x18\x03 \x01(\t\x12\x1a\n\x12replication_factor\x18\x04 \x01(\x05\x12\x12\n\npartitions\x18\x05 \x01(\x05\"I\n\x11MessageIdentifier\x12\x1b\n\x13publisher_client_id\x18\x01 \x01(\x03\x12\x17\n\x0fsequence_number\x18\x02 \x01(\x05\"M\n\x0c\x43heckRequest\x12=\n\nduplicates\x18\x01 \x03(\x0b\x32).google.pubsub.loadtest.MessageIdentifier\"\xb6\x01\n\rCheckResponse\x12\x15\n\rbucket_values\x18\x01 \x03(\x03\x12\x33\n\x10running_duration\x18\x02 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x13\n\x0bis_finished\x18\x03 \x01(\x08\x12\x44\n\x11received_messages\x18\x04 \x03(\x0b\x32).google.pubsub.loadtest.MessageIdentifier\"\x10\n\x0e\x45xecuteRequest\"j\n\x0f\x45xecuteResponse\x12\x11\n\tlatencies\x18\x01 \x03(\x03\x12\x44\n\x11received_messages\x18\x02 \x03(\x0b\x32).google.pubsub.loadtest.MessageIdentifier2\xb6\x01\n\x08Loadtest\x12T\n\x05Start\x12$.google.pubsub.loadtest.StartRequest\x1a%.google.pubsub.loadtest.StartResponse\x12T\n\x05\x43heck\x12$.google.pubsub.loadtest.CheckRequest\x1a%.google.pubsub.loadtest.CheckResponse2\xc2\x01\n\x0eLoadtestWorker\x12T\n\x05Start\x12$.google.pubsub.loadtest.StartRequest\x1a%.google.pubsub.loadtest.StartResponse\x12Z\n\x07\x45xecute\x12&.google.pubsub.loadtest.ExecuteRequest\x1a\'.google.pubsub.loadtest.ExecuteResponseB.\n\x1d\x63om.google.pubsub.flic.commonB\rLoadtestProtob\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_STARTREQUEST = _descriptor.Descriptor(
  name='StartRequest',
  full_name='google.pubsub.loadtest.StartRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='google.pubsub.loadtest.StartRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='topic', full_name='google.pubsub.loadtest.StartRequest.topic', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='request_rate', full_name='google.pubsub.loadtest.StartRequest.request_rate', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message_size', full_name='google.pubsub.loadtest.StartRequest.message_size', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_outstanding_requests', full_name='google.pubsub.loadtest.StartRequest.max_outstanding_requests', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='google.pubsub.loadtest.StartRequest.start_time', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='burn_in_duration', full_name='google.pubsub.loadtest.StartRequest.burn_in_duration', index=6,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='publish_batch_size', full_name='google.pubsub.loadtest.StartRequest.publish_batch_size', index=7,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='publish_batch_duration', full_name='google.pubsub.loadtest.StartRequest.publish_batch_duration', index=8,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='test_duration', full_name='google.pubsub.loadtest.StartRequest.test_duration', index=9,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='number_of_messages', full_name='google.pubsub.loadtest.StartRequest.number_of_messages', index=10,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pubsub_options', full_name='google.pubsub.loadtest.StartRequest.pubsub_options', index=11,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kafka_options', full_name='google.pubsub.loadtest.StartRequest.kafka_options', index=12,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='stop_conditions', full_name='google.pubsub.loadtest.StartRequest.stop_conditions',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='options', full_name='google.pubsub.loadtest.StartRequest.options',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=108,
  serialized_end=660,
)


_STARTRESPONSE = _descriptor.Descriptor(
  name='StartResponse',
  full_name='google.pubsub.loadtest.StartResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=662,
  serialized_end=677,
)


_PUBSUBOPTIONS = _descriptor.Descriptor(
  name='PubsubOptions',
  full_name='google.pubsub.loadtest.PubsubOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.loadtest.PubsubOptions.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_messages_per_pull', full_name='google.pubsub.loadtest.PubsubOptions.max_messages_per_pull', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=679,
  serialized_end=747,
)


_KAFKAOPTIONS = _descriptor.Descriptor(
  name='KafkaOptions',
  full_name='google.pubsub.loadtest.KafkaOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='broker', full_name='google.pubsub.loadtest.KafkaOptions.broker', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poll_duration', full_name='google.pubsub.loadtest.KafkaOptions.poll_duration', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zookeeper_ip_address', full_name='google.pubsub.loadtest.KafkaOptions.zookeeper_ip_address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='replication_factor', full_name='google.pubsub.loadtest.KafkaOptions.replication_factor', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partitions', full_name='google.pubsub.loadtest.KafkaOptions.partitions', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=750,
  serialized_end=908,
)


_MESSAGEIDENTIFIER = _descriptor.Descriptor(
  name='MessageIdentifier',
  full_name='google.pubsub.loadtest.MessageIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='publisher_client_id', full_name='google.pubsub.loadtest.MessageIdentifier.publisher_client_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='google.pubsub.loadtest.MessageIdentifier.sequence_number', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=910,
  serialized_end=983,
)


_CHECKREQUEST = _descriptor.Descriptor(
  name='CheckRequest',
  full_name='google.pubsub.loadtest.CheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duplicates', full_name='google.pubsub.loadtest.CheckRequest.duplicates', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=985,
  serialized_end=1062,
)


_CHECKRESPONSE = _descriptor.Descriptor(
  name='CheckResponse',
  full_name='google.pubsub.loadtest.CheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket_values', full_name='google.pubsub.loadtest.CheckResponse.bucket_values', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='running_duration', full_name='google.pubsub.loadtest.CheckResponse.running_duration', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_finished', full_name='google.pubsub.loadtest.CheckResponse.is_finished', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='received_messages', full_name='google.pubsub.loadtest.CheckResponse.received_messages', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1065,
  serialized_end=1247,
)


_EXECUTEREQUEST = _descriptor.Descriptor(
  name='ExecuteRequest',
  full_name='google.pubsub.loadtest.ExecuteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1249,
  serialized_end=1265,
)


_EXECUTERESPONSE = _descriptor.Descriptor(
  name='ExecuteResponse',
  full_name='google.pubsub.loadtest.ExecuteResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='latencies', full_name='google.pubsub.loadtest.ExecuteResponse.latencies', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='received_messages', full_name='google.pubsub.loadtest.ExecuteResponse.received_messages', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1267,
  serialized_end=1373,
)

_STARTREQUEST.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STARTREQUEST.fields_by_name['burn_in_duration'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_STARTREQUEST.fields_by_name['publish_batch_duration'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_STARTREQUEST.fields_by_name['test_duration'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_STARTREQUEST.fields_by_name['pubsub_options'].message_type = _PUBSUBOPTIONS
_STARTREQUEST.fields_by_name['kafka_options'].message_type = _KAFKAOPTIONS
_STARTREQUEST.oneofs_by_name['stop_conditions'].fields.append(
  _STARTREQUEST.fields_by_name['test_duration'])
_STARTREQUEST.fields_by_name['test_duration'].containing_oneof = _STARTREQUEST.oneofs_by_name['stop_conditions']
_STARTREQUEST.oneofs_by_name['stop_conditions'].fields.append(
  _STARTREQUEST.fields_by_name['number_of_messages'])
_STARTREQUEST.fields_by_name['number_of_messages'].containing_oneof = _STARTREQUEST.oneofs_by_name['stop_conditions']
_STARTREQUEST.oneofs_by_name['options'].fields.append(
  _STARTREQUEST.fields_by_name['pubsub_options'])
_STARTREQUEST.fields_by_name['pubsub_options'].containing_oneof = _STARTREQUEST.oneofs_by_name['options']
_STARTREQUEST.oneofs_by_name['options'].fields.append(
  _STARTREQUEST.fields_by_name['kafka_options'])
_STARTREQUEST.fields_by_name['kafka_options'].containing_oneof = _STARTREQUEST.oneofs_by_name['options']
_KAFKAOPTIONS.fields_by_name['poll_duration'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_CHECKREQUEST.fields_by_name['duplicates'].message_type = _MESSAGEIDENTIFIER
_CHECKRESPONSE.fields_by_name['running_duration'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_CHECKRESPONSE.fields_by_name['received_messages'].message_type = _MESSAGEIDENTIFIER
_EXECUTERESPONSE.fields_by_name['received_messages'].message_type = _MESSAGEIDENTIFIER
DESCRIPTOR.message_types_by_name['StartRequest'] = _STARTREQUEST
DESCRIPTOR.message_types_by_name['StartResponse'] = _STARTRESPONSE
DESCRIPTOR.message_types_by_name['PubsubOptions'] = _PUBSUBOPTIONS
DESCRIPTOR.message_types_by_name['KafkaOptions'] = _KAFKAOPTIONS
DESCRIPTOR.message_types_by_name['MessageIdentifier'] = _MESSAGEIDENTIFIER
DESCRIPTOR.message_types_by_name['CheckRequest'] = _CHECKREQUEST
DESCRIPTOR.message_types_by_name['CheckResponse'] = _CHECKRESPONSE
DESCRIPTOR.message_types_by_name['ExecuteRequest'] = _EXECUTEREQUEST
DESCRIPTOR.message_types_by_name['ExecuteResponse'] = _EXECUTERESPONSE

StartRequest = _reflection.GeneratedProtocolMessageType('StartRequest', (_message.Message,), dict(
  DESCRIPTOR = _STARTREQUEST,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.StartRequest)
  ))
_sym_db.RegisterMessage(StartRequest)

StartResponse = _reflection.GeneratedProtocolMessageType('StartResponse', (_message.Message,), dict(
  DESCRIPTOR = _STARTRESPONSE,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.StartResponse)
  ))
_sym_db.RegisterMessage(StartResponse)

PubsubOptions = _reflection.GeneratedProtocolMessageType('PubsubOptions', (_message.Message,), dict(
  DESCRIPTOR = _PUBSUBOPTIONS,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.PubsubOptions)
  ))
_sym_db.RegisterMessage(PubsubOptions)

KafkaOptions = _reflection.GeneratedProtocolMessageType('KafkaOptions', (_message.Message,), dict(
  DESCRIPTOR = _KAFKAOPTIONS,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.KafkaOptions)
  ))
_sym_db.RegisterMessage(KafkaOptions)

MessageIdentifier = _reflection.GeneratedProtocolMessageType('MessageIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _MESSAGEIDENTIFIER,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.MessageIdentifier)
  ))
_sym_db.RegisterMessage(MessageIdentifier)

CheckRequest = _reflection.GeneratedProtocolMessageType('CheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHECKREQUEST,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.CheckRequest)
  ))
_sym_db.RegisterMessage(CheckRequest)

CheckResponse = _reflection.GeneratedProtocolMessageType('CheckResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHECKRESPONSE,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.CheckResponse)
  ))
_sym_db.RegisterMessage(CheckResponse)

ExecuteRequest = _reflection.GeneratedProtocolMessageType('ExecuteRequest', (_message.Message,), dict(
  DESCRIPTOR = _EXECUTEREQUEST,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.ExecuteRequest)
  ))
_sym_db.RegisterMessage(ExecuteRequest)

ExecuteResponse = _reflection.GeneratedProtocolMessageType('ExecuteResponse', (_message.Message,), dict(
  DESCRIPTOR = _EXECUTERESPONSE,
  __module__ = 'loadtest_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.loadtest.ExecuteResponse)
  ))
_sym_db.RegisterMessage(ExecuteResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\035com.google.pubsub.flic.commonB\rLoadtestProto'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class LoadtestStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Start = channel.unary_unary(
        '/google.pubsub.loadtest.Loadtest/Start',
        request_serializer=StartRequest.SerializeToString,
        response_deserializer=StartResponse.FromString,
        )
    self.Check = channel.unary_unary(
        '/google.pubsub.loadtest.Loadtest/Check',
        request_serializer=CheckRequest.SerializeToString,
        response_deserializer=CheckResponse.FromString,
        )


class LoadtestServicer(object):

  def Start(self, request, context):
    """Starts a load test
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Check(self, request, context):
    """Checks the status of a load test
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LoadtestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Start': grpc.unary_unary_rpc_method_handler(
          servicer.Start,
          request_deserializer=StartRequest.FromString,
          response_serializer=StartResponse.SerializeToString,
      ),
      'Check': grpc.unary_unary_rpc_method_handler(
          servicer.Check,
          request_deserializer=CheckRequest.FromString,
          response_serializer=CheckResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.pubsub.loadtest.Loadtest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaLoadtestServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def Start(self, request, context):
    """Starts a load test
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Check(self, request, context):
    """Checks the status of a load test
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaLoadtestStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def Start(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Starts a load test
    """
    raise NotImplementedError()
  Start.future = None
  def Check(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Checks the status of a load test
    """
    raise NotImplementedError()
  Check.future = None


def beta_create_Loadtest_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('google.pubsub.loadtest.Loadtest', 'Check'): CheckRequest.FromString,
    ('google.pubsub.loadtest.Loadtest', 'Start'): StartRequest.FromString,
  }
  response_serializers = {
    ('google.pubsub.loadtest.Loadtest', 'Check'): CheckResponse.SerializeToString,
    ('google.pubsub.loadtest.Loadtest', 'Start'): StartResponse.SerializeToString,
  }
  method_implementations = {
    ('google.pubsub.loadtest.Loadtest', 'Check'): face_utilities.unary_unary_inline(servicer.Check),
    ('google.pubsub.loadtest.Loadtest', 'Start'): face_utilities.unary_unary_inline(servicer.Start),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Loadtest_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('google.pubsub.loadtest.Loadtest', 'Check'): CheckRequest.SerializeToString,
    ('google.pubsub.loadtest.Loadtest', 'Start'): StartRequest.SerializeToString,
  }
  response_deserializers = {
    ('google.pubsub.loadtest.Loadtest', 'Check'): CheckResponse.FromString,
    ('google.pubsub.loadtest.Loadtest', 'Start'): StartResponse.FromString,
  }
  cardinalities = {
    'Check': cardinality.Cardinality.UNARY_UNARY,
    'Start': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.pubsub.loadtest.Loadtest', cardinalities, options=stub_options)


class LoadtestWorkerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Start = channel.unary_unary(
        '/google.pubsub.loadtest.LoadtestWorker/Start',
        request_serializer=StartRequest.SerializeToString,
        response_deserializer=StartResponse.FromString,
        )
    self.Execute = channel.unary_unary(
        '/google.pubsub.loadtest.LoadtestWorker/Execute',
        request_serializer=ExecuteRequest.SerializeToString,
        response_deserializer=ExecuteResponse.FromString,
        )


class LoadtestWorkerServicer(object):

  def Start(self, request, context):
    """Starts a worker
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Execute(self, request, context):
    """Executes a command on the worker, returning the latencies of the operations. Since some
    commands consist of multiple operations (i.e. pulls contain many received messages with
    different end to end latencies) a single command can have multiple latencies returned.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LoadtestWorkerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Start': grpc.unary_unary_rpc_method_handler(
          servicer.Start,
          request_deserializer=StartRequest.FromString,
          response_serializer=StartResponse.SerializeToString,
      ),
      'Execute': grpc.unary_unary_rpc_method_handler(
          servicer.Execute,
          request_deserializer=ExecuteRequest.FromString,
          response_serializer=ExecuteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.pubsub.loadtest.LoadtestWorker', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaLoadtestWorkerServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def Start(self, request, context):
    """Starts a worker
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Execute(self, request, context):
    """Executes a command on the worker, returning the latencies of the operations. Since some
    commands consist of multiple operations (i.e. pulls contain many received messages with
    different end to end latencies) a single command can have multiple latencies returned.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaLoadtestWorkerStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def Start(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Starts a worker
    """
    raise NotImplementedError()
  Start.future = None
  def Execute(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Executes a command on the worker, returning the latencies of the operations. Since some
    commands consist of multiple operations (i.e. pulls contain many received messages with
    different end to end latencies) a single command can have multiple latencies returned.
    """
    raise NotImplementedError()
  Execute.future = None


def beta_create_LoadtestWorker_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('google.pubsub.loadtest.LoadtestWorker', 'Execute'): ExecuteRequest.FromString,
    ('google.pubsub.loadtest.LoadtestWorker', 'Start'): StartRequest.FromString,
  }
  response_serializers = {
    ('google.pubsub.loadtest.LoadtestWorker', 'Execute'): ExecuteResponse.SerializeToString,
    ('google.pubsub.loadtest.LoadtestWorker', 'Start'): StartResponse.SerializeToString,
  }
  method_implementations = {
    ('google.pubsub.loadtest.LoadtestWorker', 'Execute'): face_utilities.unary_unary_inline(servicer.Execute),
    ('google.pubsub.loadtest.LoadtestWorker', 'Start'): face_utilities.unary_unary_inline(servicer.Start),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_LoadtestWorker_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('google.pubsub.loadtest.LoadtestWorker', 'Execute'): ExecuteRequest.SerializeToString,
    ('google.pubsub.loadtest.LoadtestWorker', 'Start'): StartRequest.SerializeToString,
  }
  response_deserializers = {
    ('google.pubsub.loadtest.LoadtestWorker', 'Execute'): ExecuteResponse.FromString,
    ('google.pubsub.loadtest.LoadtestWorker', 'Start'): StartResponse.FromString,
  }
  cardinalities = {
    'Execute': cardinality.Cardinality.UNARY_UNARY,
    'Start': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.pubsub.loadtest.LoadtestWorker', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
